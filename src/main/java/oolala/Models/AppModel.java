package oolala.Models;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;

import javafx.animation.SequentialTransition;
import oolala.Views.ViewComponents.CanvasScreen;
import oolala.Command.Command;
import oolala.Parsers.Parser;
import oolala.Views.TurtleView;

/**
 * A model class to hold information about the commands running of the app. TurtleView instances are created in this class when a command is run.
 *
 * @author
 */

public abstract class AppModel {
    public CanvasScreen myCanvas;
    public Map<Integer, TurtleView> turtles;
    public List<Integer> currTurtleIdxs;
    public SequentialTransition animation;
    public ResourceBundle myResources;
    public Parser parser;
    protected double homeX;
    protected double homeY;
    public String turtleIcon;
    public String turtleStamp;
    protected RunningStatus runningStatus;
    public boolean turtlesInBound;

    //TODO: Can we create polymorphism for parser?

    public AppModel(CanvasScreen canvas, ResourceBundle resources, SequentialTransition animation) {
        runningStatus = new RunningStatus();
        this.animation = animation;
        myCanvas = canvas;
        myResources = resources;
        turtles = new HashMap<>();
        currTurtleIdxs = new ArrayList<>();
        homeX = 0;
        homeY = 0;
        turtlesInBound = true;
    }


    /**
     * A method to create a new TurtleView instance at home position of this model, with the icon and stamp set in the model.
     *
     * @return turtleView, a TurtleView instance
     * @author Luyao Wang
     */
    public TurtleView addNewTurtle() {
        TurtleView turtleView = new TurtleView(homeX, homeY, myCanvas, turtleStamp, turtleIcon, runningStatus, animation, this);
        return turtleView;
    }

    /**
     * A method to run the app on a list of Command.
     *
     * @param commands the list of Command, generated by parsers
     * @author Luyao Wang
     */
    public void runApp(List<Command> commands) {
        runningStatus.setRunningStatus(true);
    }

    /**
     * A method to set the status of running.
     *
     * @param isRunning the status of running
     * @author Luyao Wang
     */
    public void setRunningStatus(boolean isRunning) {
        runningStatus.setRunningStatus(isRunning);
    }

    /**
     * A method to get the status of running.
     *
     * @return the status of running
     * @author Luyao Wang
     */
    public RunningStatus getRunningStatus() {
        return runningStatus;
    }

    /**
     * A method to get the indices of current active turtles.
     *
     * @author Luyao Wang
     */
    public List<Integer> getCurrTurtleIdxs() {
        return currTurtleIdxs;
    }

    /**
     * A method to get a map of turtles.
     *
     * @return a map of turtles
     * @author Luyao Wang
     */
    public Map<Integer, TurtleView> getTurtles() {
        return turtles;
    }

    /**
     * A method to reset the app, and clear the canvas, leaving one turtle at home position.
     *
     * @param resetHome whether to reset the home position to center of the screen
     * @author Luyao Wang
     */
    public void reset(boolean resetHome) {
        if (resetHome) {
            homeX = 0;
            homeY = 0;
        }
        turtles.clear(); // TODO: Check if this is correct functionality
        myCanvas.clear();
        currTurtleIdxs.clear();
        turtles.put(1, addNewTurtle());
        myCanvas.getShapes().getChildren().add(turtles.get(1).getIcon()); // TODO: We should probably refactor this for scalability
        currTurtleIdxs.add(1);
        runningStatus.setRunningStatus(false);
        turtlesInBound = true;
    }

    /**
     * A method to set home position of the app.
     *
     * @param x X position of the home position
     * @param y y position of the home position
     * @author Luyao Wang
     */
    public void setHome(double x, double y) {
        homeX = x;
        homeY = y;
    }

    /**
     * A method to get home position.
     *
     * @return the position of home
     * @author Luyao Wang
     */
    public Position getHomePos() {
        return new Position(homeX, homeY);
    }

    /**
     * A method to get the parser of this app.
     *
     * @return the parser of this app
     * @author Luyao Wang
     */
    public Parser getParser() {
        return parser;
    }

    /**
     * A method to get the path of turtle icon.
     *
     * @return the path of the icon
     * @author Luyao Wang
     */
    public String getTurtleIconPath() {
        return turtleIcon;
    }

    /**
     * A method to get the path of turtle stamp icon.
     *
     * @return the path of the stamp icon
     * @author Luyao Wang
     */
    public String getStampIconPath() {
        return turtleStamp;
    }

    /**
     * A method to get the canvasScreen of the app.
     *
     * @return the canvasScreen of the app
     * @author Luyao Wang
     */
    public CanvasScreen getMyCanvas() {
        return myCanvas;
    }

    /**
     * A method to change the icon of turtle.
     *
     * @param path path of the image to replace old image
     * @author Luyao Wang
     */
    public void changeImage(String path) {
    }
}
