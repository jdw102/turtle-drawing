package oolala.Models;

import javafx.animation.SequentialTransition;
import oolala.Command.CommandName;
import oolala.Views.ViewComponents.CanvasScreen;
import oolala.Command.Command;
import oolala.Parsers.LogoParser;

import java.util.Iterator;
import java.util.List;
import java.util.ResourceBundle;

/**
 * Subclass of AppModel
 * A model class to hold information about the commands running of the Logo app. TurtleView instances are created in this class when a command is run.
 *
 * @author
 */

public class LogoModel extends AppModel {

    public LogoModel(CanvasScreen canvas, ResourceBundle myResources, String iconPath, SequentialTransition animation) {
        super(canvas, myResources, animation);
        turtleStamp = myResources.getString(iconPath);
        turtleIcon = myResources.getString(iconPath);
        parser = new LogoParser(myResources);
        turtles.put(1, addNewTurtle());
        currTurtleIdxs.add(1);
        turtles.get(1).getIcon().setId("Turtle" + Integer.toString(1));
        myCanvas.getShapes().getChildren().add(turtles.get(1).getIcon());
    }

    /**
     * A method to run the app on a list of Command.
     *
     * @param commands the list of Command, generated by parsers
     * @author Luyao Wang
     */
    @Override
    public void runApp(List<Command> commands) {
        super.runApp(commands);
        Iterator<Command> itCmd = commands.iterator();
        while (itCmd.hasNext() && turtlesInBound) {
            Command instruction = itCmd.next();
            //TODO: Handle tell command
            if (instruction.prefix == CommandName.TELL) {
                currTurtleIdxs.clear();
                currTurtleIdxs.addAll(instruction.getParams());
                for (Integer param : instruction.getParams()) {
                    if (!turtles.containsKey(param)) {
                        System.out.println("Creating new turtle");
                        turtles.put(param, addNewTurtle());
                        turtles.get(param).getIcon().setId("Turtle" + Integer.toString(param));
                        myCanvas.getShapes().getChildren().add(turtles.get(param).getIcon());
                    }
                }
            }
            for (Integer idx : currTurtleIdxs) {
                instruction.runCommand(turtles.get(idx));
                if (!turtles.get(idx).getModel().inBounds()) {
                    turtlesInBound = false;
                    break;
                }
            }
            itCmd.remove();
        }
    }

    /**
     * A method to change the icon of turtle.
     *
     * @param path path of the image to replace old image
     * @author Luyao Wang
     */
    @Override
    public void changeImage(String path) {
        turtleIcon = path;
        turtleStamp = path;
        for (Integer i : currTurtleIdxs) {
            turtles.get(i).changeIcon(path, this);
            turtles.get(i).changeStamp(path);
        }
    }
}
